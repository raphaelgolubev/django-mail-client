version: '3.8'

networks:
  app_network:
    driver: bridge
    internal: false

volumes:
  pg_volume:
    name: app_postgres_data

services:
  redis-service:
    image: redis:latest
    container_name: redis-container
    env_file:
      - path: .env
        required: true
    command: redis-server --port ${REDIS_PORT}
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - app_network

  postgres-service:
    image: postgres:14.1-alpine
    container_name: postgres-container
    restart: always
    env_file:
      - path: .env
        required: true
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - app_network
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - pg_volume:/var/lib/postgresql/data

  django:
    container_name: django-container
    stdin_open: true
    tty: true
    command: >
      bash -c "python3 manage.py makemigrations &&
      python3 manage.py migrate &&
      python3 manage.py runserver ${APP_HOST}:${APP_PORT}"
    build: 
      context: .
      dockerfile: Dockerfile
    volumes:
      - type: bind
        source: ./core
        target: /app/core
      - type: bind
        source: ./main
        target: /app/main
      - type: bind
        source: ./logs
        target: /app/logs
    ports:
      - "${APP_PORT}:${APP_PORT}"
    env_file:
      - path: .env
        required: true
    restart: always
    networks:
      - app_network
    depends_on:
      - postgres-service
      - redis-service
